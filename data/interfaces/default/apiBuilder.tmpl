<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"> 
<head>
<title>API Builder</title>
<script type="text/javascript" charset="utf-8">
<!--
sbRoot = "$sbRoot";
//-->
</script>
<script type="text/javascript" src="$sbRoot/js/jquery-1.6.1.min.js"></script>
<script type="text/javascript" src="$sbRoot/js/apibuilder.js"></script>

<style type="text/css">
<!--
#apibuilder select { padding: 1px 2px 1px 6px; }
#apibuilder select option { padding: 1px 6px; line-height: 1.2em; }
#apibuilder .disabled { color: #ccc; }
#apibuilder .setter { background-color: #eee; }
-->
</style>

<script type="text/javascript">
var hide_empty_list=true; 
var disable_empty_list=true;

addListGroup("api", "Command");


addOption("Command", "SickBeard", "?cmd=sb", 1); //make default
addOption("Command", "SickBeard.Restart", "?cmd=sb.restart", "", "", "setter");
addOption("Command", "SickBeard.Shutdown", "?cmd=sb.shutdown", "", "", "setter");
addList("Command", "Coming Episodes", "?cmd=future", "future");
addList("Command", "Episode", "?cmd=episode", "episode");
addList("Command", "Episode.Search", "?cmd=episode.search", "episode.search", "", "", "setter");
addList("Command", "Episode.SetStatus", "?cmd=episode.setstatus", "episode.setstatus", "", "", "setter");
addList("Command", "Scene Exceptions", "?cmd=exceptions", "exceptions");
addList("Command", "History", "?cmd=history", "history");
addOption("Command", "History.Clear", "?cmd=history.clear", "", "", "setter");
addOption("Command", "History.Trim", "?cmd=history.trim", "", "", "setter");
addList("Command", "Logs", "?cmd=logs", "viewlog");
addList("Command", "Season List", "?cmd=seasonlist", "season_list");
addList("Command", "Seasons", "?cmd=seasons", "seasons");
addList("Command", "Show", "?cmd=show", "tvdbid");
addList("Command", "Show.Add", "?cmd=show.add", "show_add", "", "", "setter disabled");
addList("Command", "Show.Delete", "?cmd=show.delete", "tvdbid", "", "", "setter");
addList("Command", "Show.Refresh", "?cmd=show.refresh", "tvdbid", "", "", "setter");
addList("Command", "Show.Update", "?cmd=show.update", "tvdbid", "", "", "setter");
addList("Command", "Show.Banner", "?cmd=show.banner", "tvdbid", "", "", "setter");
addList("Command", "Show.Poster", "?cmd=show.poster", "tvdbid", "", "", "setter");
addList("Command", "Shows", "?cmd=shows", "shows");
addList("Command", "Stats", "?cmd=stats", "tvdbid");

// addOption("tvdbid", "Optional Param", "", 1);
#for $curShow in $sortedShowList:
addOption("tvdbid", "$curShow.name", "&tvdbid=$curShow.tvdbid");
#end for

addOption("viewlog", "Optional Param", "", 1);
addOption("viewlog", "Debug", "&minlevel=debug");
addOption("viewlog", "Info", "&minlevel=info");
addOption("viewlog", "Warning", "&minlevel=warning");
addOption("viewlog", "Error", "&minlevel=error");

addOption("shows", "Optional Param", "", 1);
addOption("shows", "Show Only Paused", "&paused=1");
addOption("shows", "Show Only Not Paused", "&paused=0");
addOption("shows", "Sort by Show Name", "&sort=show");

#for $curShow in $sortedShowList:
addList("seasons", "$curShow.name", "&tvdbid=$curShow.tvdbid", "seasons-$curShow.tvdbid");
#end for

#for $curShow in $sortedShowList:
addList("season_list", "$curShow.name", "&tvdbid=$curShow.tvdbid", "season_list-sort");
#end for

addOption("season_list-sort", "Optional Param", "", 1);
addOption("season_list-sort", "Sort by Ascending", "&sort=asc");

// build out each show's season list for season cmd
#for $curShow in $seasonSQLResults:
addOption("seasons-$curShow", "Optional Param", "", 1);
    #for $curShowSeason in $seasonSQLResults[$curShow]:
addOption("seasons-$curShow", "$curShowSeason.season", "&season=$curShowSeason.season");
    #end for
#end for

#for $curShow in $sortedShowList:
addList("episode", "$curShow.name", "&tvdbid=$curShow.tvdbid", "episode-$curShow.tvdbid");
#end for

// build out each show's season+episode list for episode cmd
#for $curShow in $episodeSQLResults:
    #for $curShowSeason in $episodeSQLResults[$curShow]:
addList("episode-$curShow", "$curShowSeason.season x $curShowSeason.episode", "&season=$curShowSeason.season&episode=$curShowSeason.episode", "episode-$curShow-full");
    #end for
addOption("episode-$curShow-full", "Optional Param", "", 1);
addOption("episode-$curShow-full", "Show Full Path", "&full_path=1");
#end for

// build out tvshow list for episode.search
#for $curShow in $sortedShowList:
addList("episode.search", "$curShow.name", "&tvdbid=$curShow.tvdbid", "episode.search-$curShow.tvdbid");
#end for

// build out each show's season+episode list for episode.search cmd
#for $curShow in $episodeSQLResults:
    #for $curShowSeason in $episodeSQLResults[$curShow]:
addOption("episode.search-$curShow", "$curShowSeason.season x $curShowSeason.episode", "&season=$curShowSeason.season&episode=$curShowSeason.episode");
    #end for
#end for

// build out tvshow list for episode.setstatus
#for $curShow in $sortedShowList:
addList("episode.setstatus", "$curShow.name", "&tvdbid=$curShow.tvdbid", "episode.setstatus-$curShow.tvdbid");
#end for

// build out each show's season+episode list for episode.setstatus cmd
#for $curShow in $episodeSQLResults:
    #for $curShowSeason in $episodeSQLResults[$curShow]:
addList("episode.setstatus-$curShow", "$curShowSeason.season x $curShowSeason.episode", "&season=$curShowSeason.season&episode=$curShowSeason.episode", "episode-status-$curShow");
    #end for
addOption("episode-status-$curShow", "Wanted", "&status=3");
addOption("episode-status-$curShow", "Skipped", "&status=5");
addOption("episode-status-$curShow", "Archived", "&status=6");
addOption("episode-status-$curShow", "Ignored", "&status=7");
#end for

addOption("future", "Optional Param", "", 1);
//addOption("future", "Sort by Date", "&sort=date");
addOption("future", "Sort by Network", "&sort=network");
addOption("future", "Sort by Show Name", "&sort=show");

addOption("history", "Optional Param", "", 1);
addList("history", "Show Only Downloaded", "&type=downloaded", "history-type");
addList("history", "Show Only Snatched", "&type=snatched", "history-type");
//addOptGroup("history", "Limit Results");
addList("history", "Limit Results (2)", "&limit=2", "history-limit");
addList("history", "Limit Results (25)", "&limit=25", "history-limit");
addList("history", "Limit Results (50)", "&limit=50", "history-limit");
//endOptGroup("history");

addOption("history-type", "Optional Param", "", 1);
addOption("history-type", "Limit Results (2)", "&limit=2");
addOption("history-type", "Limit Results (25)", "&limit=25");
addOption("history-type", "Limit Results (50)", "&limit=50");

addOption("history-limit", "Optional Param", "", 1);
addOption("history-limit", "Show Only Downloaded", "&type=downloaded");
addOption("history-limit", "Show Only Snatched", "&type=snatched");

addOption("exceptions", "Optional Param", "", 1);
#for $curShow in $sortedShowList:
addOption("exceptions", "$curShow.name", "&tvdbid=$curShow.tvdbid");
#end for


</script>
</head>

<body onload="initListGroup('api', document.apibuilder.firstlevel, document.apibuilder.secondlevel, document.apibuilder.thirdlevel, document.apibuilder.forthlevel)">

<form name="apibuilder" id="apibuilder" action="">
<table align="center">
<thead><tr><th>apikey</th><th>command</th></tr></thead>
    <tr>
        <td><input type="text" size="4" id="apikey" name="apikey" value="1234"></td>
        <td><select name="firstlevel"><option></option></select></td>
        <td><select name="secondlevel"><option></option></select></td>
        <td><select name="thirdlevel"><option></option></select></td>
        <td><select name="forthlevel"><option></option></select></td>
        <td>
            <input type="button" value="Reset" onclick="resetListGroup('api',1)" />
            <input type="button" value="Go" onclick="goListGroup(this.form['apikey'].value, this.form['forthlevel'].value, this.form['thirdlevel'].value, this.form['secondlevel'].value, this.form['firstlevel'].value)" />
        </td>
    </tr>
    <tr>
        <td colspan="4">
            <input type="checkbox" id="debug" class="global"><label for="debug"> Debug?</label>
            <input type="checkbox" id="profile" class="global"><label for="profile"> Profiler?</label>
            <input type="checkbox" id="help" class="global"><label for="help"> Help?</label>
        </td>
    <tr/>
</table>

</form>

<div id="apiResponse"></div>

</body>

</html>
